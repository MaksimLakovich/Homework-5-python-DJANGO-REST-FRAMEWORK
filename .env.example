# Создайте файл .env из копии этого файла и замените значения переменных реальными данными

# Настройки секретного ключа проекта django в config/settings.py
#Django рекомендует в целях безопасности хранить секретный ключ, используемый в продакшене, в тайне!
SECRET_KEY_FOR_PROJECT=secret_key_here

# Настройки дебага. В settings.py дебаг должен быть описан так: DEBUG = True if os.getenv('DEBUG') == 'True' else False
DEBUG=

# Настройки БД проекта django в config/settings.py
DATABASE_NAME=
DATABASE_USER=
DATABASE_PASSWORD=
DATABASE_HOST=
DATABASE_PORT=

# Секретный ключ для платежного сервиса Stripe
SECRET_KEY_FOR_STRIPE=secret_key_here

# URL-адрес брокера сообщений (Redis)
CELERY_BROKER_URL=

# URL-адрес брокера результатов - хранилище результатов выполнения задаx (использую тот же Redis)
CELERY_RESULT_BACKEND=

# Настройка SMTP-сервера Яндекса для отправки писем пользователям:
YANDEX_EMAIL_HOST_USER=
YANDEX_EMAIL_HOST_PASSWORD=password_here

# 1) ЧТО ЭТО?
# Если используется нестандартный порт (например, http://127.0.0.1:8080/admin/ вместо http://127.0.0.1:8000/admin/),
# то Django будет не доверять адресу http://127.0.0.1:8080/admin/, так как источник будет не совпадать с
# доверенным доменом из ALLOWED_HOSTS или CSRF_TRUSTED_ORIGINS и выдаст 403 CSRF verification failed.
# Чтоб исключить ошибку нужно добавить параметр CSRF_TRUSTED_ORIGINS в settings.py и указывать в нем список
# доверенных доменов с портами
# 2) ДОП ПОЯСНЕНИЕ:
# Django проверяет конфигурацию, и в CSRF_TRUSTED_ORIGINS должен быть СПИСОК и без пустых некорректных
# данных, поэтому если не хардкодить тут и выносить в .ENV , то нужно писать код для создания списка без пустых
# значений в конце.
CSRF_TRUSTED_ORIGINS=http://хост:8080
